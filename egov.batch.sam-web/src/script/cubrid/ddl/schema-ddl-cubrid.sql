DROP TABLE  IF EXISTS CUSTOMER ;
DROP TABLE  IF EXISTS ERROR_LOG ;
            
DROP TABLE IF EXISTS BATCH_STEP_EXECUTION_CONTEXT ;
DROP TABLE IF EXISTS BATCH_JOB_EXECUTION_CONTEXT ;
DROP TABLE IF EXISTS BATCH_STEP_EXECUTION ;
DROP TABLE IF EXISTS BATCH_JOB_EXECUTION_PARAMS ;
DROP TABLE IF EXISTS BATCH_JOB_EXECUTION ;
DROP TABLE IF EXISTS BATCH_JOB_INSTANCE ;

DROP SERIAL BATCH_STEP_EXECUTION_SEQ ;
DROP SERIAL BATCH_JOB_EXECUTION_SEQ ;
DROP SERIAL BATCH_JOB_SEQ ;


CREATE TABLE BATCH_JOB_INSTANCE  (
	JOB_INSTANCE_ID NUMERIC(19,0)  NOT NULL PRIMARY KEY ,  
	VERSION NUMERIC(19,0) ,  
	JOB_NAME VARCHAR(300) NOT NULL, 
	JOB_KEY VARCHAR(32) NOT NULL,
	constraint JOB_INST_UN unique (JOB_NAME, JOB_KEY)
) ;

CREATE TABLE BATCH_JOB_EXECUTION  (
	JOB_EXECUTION_ID NUMERIC(19,0)  NOT NULL PRIMARY KEY ,
	VERSION NUMERIC(19,0)  ,  
	JOB_INSTANCE_ID NUMERIC(19,0) NOT NULL,
	CREATE_TIME DATETIME NOT NULL,
	START_TIME DATETIME DEFAULT NULL , 
	END_TIME DATETIME DEFAULT NULL ,
	STATUS VARCHAR(30) ,
	EXIT_CODE VARCHAR(2500) ,
	EXIT_MESSAGE VARCHAR(7500) ,
	LAST_UPDATED DATETIME,
	JOB_CONFIGURATION_LOCATION VARCHAR(2500) NULL,
	constraint JOB_INST_EXEC_FK foreign key (JOB_INSTANCE_ID)
	references BATCH_JOB_INSTANCE(JOB_INSTANCE_ID)
) ;
	
CREATE TABLE BATCH_JOB_EXECUTION_PARAMS  (
	JOB_EXECUTION_ID NUMERIC(19,0) NOT NULL ,
	TYPE_CD VARCHAR(18) NOT NULL ,
	KEY_NAME VARCHAR(300) NOT NULL , 
	STRING_VAL VARCHAR(750) , 
	DATE_VAL DATETIME DEFAULT NULL ,
	LONG_VAL NUMERIC(19,0) ,
	DOUBLE_VAL NUMERIC ,
	IDENTIFYING CHAR(1) NOT NULL ,
	constraint JOB_EXEC_PARAMS_FK foreign key (JOB_EXECUTION_ID)
	references BATCH_JOB_EXECUTION(JOB_EXECUTION_ID)
) ;
	
CREATE TABLE BATCH_STEP_EXECUTION  (
	STEP_EXECUTION_ID NUMERIC(19,0)  NOT NULL PRIMARY KEY ,
	VERSION NUMERIC(19,0) NOT NULL,  
	STEP_NAME VARCHAR(300) NOT NULL,
	JOB_EXECUTION_ID NUMERIC(19,0) NOT NULL,
	START_TIME DATETIME NOT NULL , 
	END_TIME DATETIME DEFAULT NULL ,  
	STATUS VARCHAR(30) ,
	COMMIT_COUNT NUMERIC(19,0) , 
	READ_COUNT NUMERIC(19,0) ,
	FILTER_COUNT NUMERIC(19,0) ,
	WRITE_COUNT NUMERIC(19,0) ,
	READ_SKIP_COUNT NUMERIC(19,0) ,
	WRITE_SKIP_COUNT NUMERIC(19,0) ,
	PROCESS_SKIP_COUNT NUMERIC(19,0) ,
	ROLLBACK_COUNT NUMERIC(19,0) , 
	EXIT_CODE VARCHAR(300) ,
	EXIT_MESSAGE VARCHAR(7500) ,
	LAST_UPDATED DATETIME,
	constraint JOB_EXEC_STEP_FK foreign key (JOB_EXECUTION_ID)
	references BATCH_JOB_EXECUTION(JOB_EXECUTION_ID)
) ;

CREATE TABLE BATCH_STEP_EXECUTION_CONTEXT  (
	STEP_EXECUTION_ID NUMERIC(19,0) NOT NULL PRIMARY KEY,
	SHORT_CONTEXT VARCHAR(7500) NOT NULL,
	SERIALIZED_CONTEXT string , 
	constraint STEP_EXEC_CTX_FK foreign key (STEP_EXECUTION_ID)
	references BATCH_STEP_EXECUTION(STEP_EXECUTION_ID)
) ;

CREATE TABLE BATCH_JOB_EXECUTION_CONTEXT  (
	JOB_EXECUTION_ID NUMERIC(19,0) NOT NULL PRIMARY KEY,
	SHORT_CONTEXT VARCHAR(7500) NOT NULL,
	SERIALIZED_CONTEXT string , 
	constraint JOB_EXEC_CTX_FK foreign key (JOB_EXECUTION_ID)
	references BATCH_JOB_EXECUTION(JOB_EXECUTION_ID)
) ;

CREATE serial BATCH_STEP_EXECUTION_SEQ START WITH 0 MINVALUE 0 MAXVALUE 9223372036854775807 NOCYCLE;
CREATE serial BATCH_JOB_EXECUTION_SEQ START WITH 0 MINVALUE 0 MAXVALUE 9223372036854775807 NOCYCLE;
CREATE serial BATCH_JOB_SEQ START WITH 0 MINVALUE 0 MAXVALUE 9223372036854775807 NOCYCLE;

 
CREATE TABLE CUSTOMER (
	ID NUMERIC(38)  NOT NULL PRIMARY KEY ,  
	VERSION NUMERIC(38) ,
	NAME VARCHAR(135) ,
	CREDIT DECIMAL(10,2) 
) ;
 
CREATE TABLE ERROR_LOG  (
		JOB_NAME CHAR(60) ,
		STEP_NAME CHAR(60) ,
		MESSAGE VARCHAR(900) NOT NULL
) ;
